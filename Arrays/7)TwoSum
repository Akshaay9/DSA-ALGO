1)   Time:- o(n)
space :- o(n)
space:- o()
const twoSum = (array, target) => {
  let hash = {};
  for (i = 0; i < array.length; i++) {
     if (!hash[target-array[i]]) {
     
       hash[array[i]] = i;
    } else {
      return[target-array[i],array[i]]
    }
  }
  return hash
};
console.log(twoSum([1, 2, 3, 4, 5, 6, 7, 8], 11));


2) 
time: - o(nlogn)
space : - o(n)
var twoSum = function (nums, target) {
  nums.sort((a,b)=>a-b)
  console.log(nums);
  let result=[]
  let left = 0;
  let right = nums.length - 1
  while (left < right)
  {
    if (nums[left] + nums[right] == target)
    {
      result.push([nums[left], nums[right]])
      left += 1,
        right-=1
        
    }
    else if (nums[left] + nums[right] < target)
    {
      left+=1
    }
    else
    {
      right-=1
      }
    }
  return result
};
console.log(twoSum([0, 1, 2, 3, 8, 4, 5, 6, 7, 8, 9,10], 5));

