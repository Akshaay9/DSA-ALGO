const longestPeak = (array) => {
  let longestPeakLength = 0;
  let i = 1;
  let j = array.length - 1;
  while (i < array.length - 1) {
    let isPeak = array[i] > array[i - 1] && array[i] > array[i + 1];
    if (!isPeak) {
      i++;
      continue;
    }

    let leftIdx = i - 2;
    while (leftIdx >= 0 && array[leftIdx] < array[leftIdx + 1]) {
      leftIdx -= 1;
    }
    let rightIdx = i + 2;
    while (rightIdx < array.length && array[rightIdx] > array[rightIdx - 1]) {
      rightIdx += 1;
    }
    let currentPeak = rightIdx - leftIdx - 1;
console.log(rightIdx-leftIdx);
    if (currentPeak > longestPeakLength) {
      longestPeakLength = currentPeak;
      i = rightIdx;
    }
  }
  return longestPeakLength;
};
console.log(longestPeak([0,1,2,3,4,3,2,1]));
