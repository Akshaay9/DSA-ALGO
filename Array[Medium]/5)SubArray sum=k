brute force
Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
 Subarray Sum Equals K
 var subarraySum = function (nums, k) {
  let count = 0
  let sum
  for (let i = 0; i < nums.length;i++)
  {
    sum = 0;
    for (let j = i; j < nums.length; j++)
    {
      sum = sum + nums[j]
      if (sum == k)
        count++
      }
   }
  return count
};
console.log(subarraySum([1,1,1],1));

var subarraySum = function(nums, k) {
  const map = new Map([[0, 1]]);
  let sum = 0;
  let total = 0;
  for (let num of nums) {
    sum = sum + num;
   
    total += (map.get(sum - k) || 0);
    console.log("map"+map.get(sum - k));
  
    console.log("sum"+sum);
      map.set(sum, (map.get(sum) || 0) + 1);
  }
 
  return max;
};
console.log(subarraySum([1,2,3,4,5,6,7,8,9],9));

                                   
