Input: arr = [3,3,3,3,5,5,5,2,2,7]
Output: 2
Explanation: Choosing {3,7} will make the new array [5,5,5,2,2] which has size 5 (i.e equal to half of the size of the old array).
Possible sets of size 2 are {3,5},{3,2},{5,2}.
Choosing set {2,7} is not possible as it will make the new array [3,3,3,3,5,5,5] which has size greater than half of the size of the old array.

/**
 * @param {number[]} arr
 * @return {number}
 */
var minSetSize = function (arr) {
  let len = arr.length - 1;
  let result = new Map();
  let temp = [];
  let max = -Infinity;
  for (num of arr) {
    result.set(num, result.get(num) + 1 || 1);
  }
  let occurrences = Array.from(result.values()).sort((a, b) => b - a)
 
  console.log(occurrences);
  let removed = 0;
  for (num in occurrences) {
    removed = removed + occurrences[num];

    if (removed > len / 2) return Number.parseInt(num) + 1;
  }
  return 0;
};

console.log(
  minSetSize([9, 77, 63, 22, 92, 9, 14, 54, 8, 38, 18, 19, 38, 68, 58, 19])
);
