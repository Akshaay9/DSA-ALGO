Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

 

Example 1:

Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].

var merge = function (intervals) {
  intervals.sort((a, b) => a[0] - b[0]);
  let ans = [];

  for (i = 0; i < intervals.length;i++){
    let res = intervals[i];
  

    for (j = i + 1; j < intervals.length; j++) {
      let second = res[1];
      let third = intervals[j][0];
      let fourth = intervals[j][1];
      if (second >= third) {
        second = Math.max(second, fourth);
        res[1] = second;
        i++;
      } else break;
    }
    ans.push(res);
  }

  return ans;
};
console.log(
  merge([
    [2, 6],
    [1, 3],
    [8, 10],
    [15, 18],
  ])
);
// [ [ 1, 3 ], [ 2, 6 ], [ 8, 10 ], [ 15, 18 ] ]
